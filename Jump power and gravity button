-- Services
local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Variables
local toggle = false
local gravityNormal = 196.2
local jumpPowerNormal = 50
local gravityCustom = 50
local jumpPowerCustom = 130

-- Function to update gravity and jump power
local function updateStats()
    while toggle do
        game.Workspace.Gravity = gravityCustom
        player.Character.Humanoid.JumpPower = jumpPowerCustom
        wait(1)
    end
end

-- Create UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
ScreenGui.ResetOnSpawn = false -- Keeps GUI even after death

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 200, 0, 50)
toggleButton.Position = UDim2.new(0.5, -100, 0, 25) -- Higher position on the screen
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextScaled = true
toggleButton.Text = "Toggle Gravity & Jump"
toggleButton.Font = Enum.Font.GothamSemibold -- Less bold font
toggleButton.Parent = ScreenGui

-- Add white outline to the button (box only, not the text)
local buttonOutline = Instance.new("UIStroke")
buttonOutline.Parent = toggleButton
buttonOutline.Color = Color3.fromRGB(255, 255, 255) -- White outline for the box
buttonOutline.Thickness = 2

-- Corner radius for a rounded look
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10) -- Rounded corners
UICorner.Parent = toggleButton

-- Button click function
toggleButton.MouseButton1Click:Connect(function()
    toggle = not toggle
    if toggle then
        toggleButton.Text = "Disable Gravity & Jump"
        spawn(updateStats)
    else
        toggleButton.Text = "Enable Gravity & Jump"
        game.Workspace.Gravity = gravityNormal
        player.Character.Humanoid.JumpPower = jumpPowerNormal
    end
end)
