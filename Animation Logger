-- Services
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local Workspace = game:GetService("Workspace")

-- Variables
local player = Players.LocalPlayer
local animationsLogged = {}
local selectedAnimId = nil
local selectedAnimTrack = nil
local logAllAnimations = false

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = CoreGui
ScreenGui.Name = "AnimLoggerGui"

-- Toggle Button (to show/hide the entire GUI)
local ToggleButton = Instance.new("ImageButton")
ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 50, 0, 50)
ToggleButton.Position = UDim2.new(1, -60, 0, 10)
ToggleButton.Image = "rbxthumb://type=Asset&id=103609514655874&w=420&h=420"
ToggleButton.BackgroundTransparency = 0.2
ToggleButton.BorderSizePixel = 2
ToggleButton.BorderColor3 = Color3.fromRGB(255, 255, 255)

-- Stop Loop Button (under the toggle button; same size, red background with white outline)
local StopLoopButton = Instance.new("TextButton")
StopLoopButton.Parent = ScreenGui
StopLoopButton.Size = UDim2.new(0, 50, 0, 50)
StopLoopButton.Position = UDim2.new(1, -60, 0, 70) -- positioned just below the toggle button
StopLoopButton.Text = "Stop"
StopLoopButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
StopLoopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StopLoopButton.BorderSizePixel = 2
StopLoopButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
StopLoopButton.Visible = false

-- Main Frame (Animation Logger) – No X button here
local MainFrame = Instance.new("Frame")
MainFrame.Parent = ScreenGui
MainFrame.Size = UDim2.new(0, 300, 0, 350)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Visible = false
MainFrame.BorderSizePixel = 0

local MainUICorner = Instance.new("UICorner", MainFrame)
MainUICorner.CornerRadius = UDim.new(0, 10)

-- Title for MainFrame
local Title = Instance.new("TextLabel")
Title.Parent = MainFrame
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "LowTaper's Anim Logger"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 19
Title.Font = Enum.Font.GothamBold

-- Scrolling Frame (list of animations)
local ScrollFrame = Instance.new("ScrollingFrame")
ScrollFrame.Parent = MainFrame
ScrollFrame.Size = UDim2.new(1, -10, 1, -50)
ScrollFrame.Position = UDim2.new(0, 5, 0, 45)
ScrollFrame.CanvasSize = UDim2.new(0, 0, 5, 0)
ScrollFrame.ScrollBarThickness = 5
ScrollFrame.BackgroundTransparency = 1

local UIListLayout = Instance.new("UIListLayout", ScrollFrame)
UIListLayout.Padding = UDim.new(0, 5)

----------------------------------------------------------------
-- Pick Frame (for selecting an animation's options)
----------------------------------------------------------------
local PickFrame = Instance.new("Frame")
PickFrame.Parent = ScreenGui
PickFrame.Size = UDim2.new(0, 200, 0, 120)
-- Adjust position as needed
PickFrame.Position = UDim2.new(0.5, 155, 0.5, -200)
PickFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
PickFrame.Visible = false

local PickUICorner = Instance.new("UICorner", PickFrame)
PickUICorner.CornerRadius = UDim.new(0, 10)

-- X Button for PickFrame
local PickClose = Instance.new("TextButton")
PickClose.Parent = PickFrame
PickClose.Size = UDim2.new(0, 20, 0, 20)
PickClose.Position = UDim2.new(0, 5, 0, 5)
PickClose.Text = "X"
PickClose.Font = Enum.Font.GothamBold
PickClose.TextSize = 14
PickClose.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
PickClose.TextColor3 = Color3.fromRGB(255, 255, 255)
local PickCloseCorner = Instance.new("UICorner", PickClose)
PickCloseCorner.CornerRadius = UDim.new(0, 8)

local PickText = Instance.new("TextLabel")
PickText.Parent = PickFrame
PickText.Size = UDim2.new(1, 0, 0, 30)
PickText.Position = UDim2.new(0, 0, 0, 0)
PickText.BackgroundTransparency = 1
PickText.Text = "Pick an option"
PickText.TextColor3 = Color3.fromRGB(255, 255, 255)
PickText.TextSize = 16
PickText.Font = Enum.Font.GothamBold

-- Play Button (inside PickFrame)
local PlayButton = Instance.new("TextButton")
PlayButton.Parent = PickFrame
PlayButton.Size = UDim2.new(1, -10, 0, 30)
PlayButton.Position = UDim2.new(0, 5, 0, 35)
PlayButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
PlayButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PlayButton.Text = "Play Anim"
PlayButton.Font = Enum.Font.Gotham
PlayButton.TextSize = 14
local PlayUICorner = Instance.new("UICorner", PlayButton)
PlayUICorner.CornerRadius = UDim.new(0, 8)

-- Copy Button (inside PickFrame)
local CopyButton = Instance.new("TextButton")
CopyButton.Parent = PickFrame
CopyButton.Size = UDim2.new(1, -10, 0, 30)
CopyButton.Position = UDim2.new(0, 5, 0, 70)
CopyButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
CopyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyButton.Text = "Copy ID"
CopyButton.Font = Enum.Font.Gotham
CopyButton.TextSize = 14
local CopyUICorner = Instance.new("UICorner", CopyButton)
CopyUICorner.CornerRadius = UDim.new(0, 8)

----------------------------------------------------------------
-- Loop Frame (for choosing whether to loop) – appears inside PickFrame
----------------------------------------------------------------
local LoopFrame = Instance.new("Frame")
LoopFrame.Parent = PickFrame  -- appears in the same spot as the Play button
LoopFrame.Size = UDim2.new(1, 0, 1, 0)
LoopFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
LoopFrame.Visible = false
local LoopUICorner = Instance.new("UICorner", LoopFrame)
LoopUICorner.CornerRadius = UDim.new(0, 10)

-- X Button for LoopFrame
local LoopClose = Instance.new("TextButton")
LoopClose.Parent = LoopFrame
LoopClose.Size = UDim2.new(0, 20, 0, 20)
LoopClose.Position = UDim2.new(0, 5, 0, 5)
LoopClose.Text = "X"
LoopClose.Font = Enum.Font.GothamBold
LoopClose.TextSize = 14
LoopClose.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
LoopClose.TextColor3 = Color3.fromRGB(255,255,255)
local LoopCloseCorner = Instance.new("UICorner", LoopClose)
LoopCloseCorner.CornerRadius = UDim.new(0, 8)

local LoopText = Instance.new("TextLabel")
LoopText.Parent = LoopFrame
LoopText.Size = UDim2.new(1, 0, 0, 30)
LoopText.Position = UDim2.new(0, 0, 0, 0)
LoopText.BackgroundTransparency = 1
LoopText.Text = "Loop Animation?"
LoopText.TextColor3 = Color3.fromRGB(255, 255, 255)
LoopText.TextSize = 16
LoopText.Font = Enum.Font.GothamBold

local YesButton = Instance.new("TextButton")
YesButton.Parent = LoopFrame
YesButton.Size = UDim2.new(0.5, -10, 0, 30)
YesButton.Position = UDim2.new(0, 5, 0, 40)
YesButton.BackgroundColor3 = Color3.fromRGB(60, 180, 60)
YesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
YesButton.Text = "Yes"
YesButton.Font = Enum.Font.Gotham
YesButton.TextSize = 14
local YesUICorner = Instance.new("UICorner", YesButton)
YesUICorner.CornerRadius = UDim.new(0, 8)

local NoButton = Instance.new("TextButton")
NoButton.Parent = LoopFrame
NoButton.Size = UDim2.new(0.5, -10, 0, 30)
NoButton.Position = UDim2.new(0.5, 5, 0, 40)
NoButton.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
NoButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NoButton.Text = "No"
NoButton.Font = Enum.Font.Gotham
NoButton.TextSize = 14
local NoUICorner = Instance.new("UICorner", NoButton)
NoUICorner.CornerRadius = UDim.new(0, 8)

----------------------------------------------------------------
-- Settings Frame
----------------------------------------------------------------
local SettingsFrame = Instance.new("Frame")
SettingsFrame.Parent = ScreenGui
SettingsFrame.Size = UDim2.new(0, 200, 0, 190)
SettingsFrame.Position = UDim2.new(0.5, -355, 0.5, -200)
SettingsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
SettingsFrame.Visible = false
local SettingsUICorner = Instance.new("UICorner", SettingsFrame)
SettingsUICorner.CornerRadius = UDim.new(0, 10)

-- X Button for SettingsFrame
local SettingsClose = Instance.new("TextButton")
SettingsClose.Parent = SettingsFrame
SettingsClose.Size = UDim2.new(0, 20, 0, 20)
SettingsClose.Position = UDim2.new(0, 5, 0, 5)
SettingsClose.Text = "X"
SettingsClose.Font = Enum.Font.GothamBold
SettingsClose.TextSize = 14
SettingsClose.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
SettingsClose.TextColor3 = Color3.fromRGB(255,255,255)
local SettingsCloseCorner = Instance.new("UICorner", SettingsClose)
SettingsCloseCorner.CornerRadius = UDim.new(0, 8)

local SettingsText = Instance.new("TextLabel")
SettingsText.Parent = SettingsFrame
SettingsText.Size = UDim2.new(1, 0, 0, 30)
SettingsText.Position = UDim2.new(0, 0, 0, 0)
SettingsText.BackgroundTransparency = 1
SettingsText.Text = "Settings"
SettingsText.TextColor3 = Color3.fromRGB(255, 255, 255)
SettingsText.TextSize = 16
SettingsText.Font = Enum.Font.GothamBold

local ClearAllButton = Instance.new("TextButton")
ClearAllButton.Parent = SettingsFrame
ClearAllButton.Size = UDim2.new(1, -10, 0, 30)
ClearAllButton.Position = UDim2.new(0, 5, 0, 40)
ClearAllButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ClearAllButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ClearAllButton.Text = "Clear All Animations"
ClearAllButton.Font = Enum.Font.Gotham
ClearAllButton.TextSize = 14
local ClearAllUICorner = Instance.new("UICorner", ClearAllButton)
ClearAllUICorner.CornerRadius = UDim.new(0, 8)

local LogAllButton = Instance.new("TextButton")
LogAllButton.Parent = SettingsFrame
LogAllButton.Size = UDim2.new(1, -10, 0, 30)
LogAllButton.Position = UDim2.new(0, 5, 0, 80)
LogAllButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
LogAllButton.TextColor3 = Color3.fromRGB(255, 255, 255)
LogAllButton.Text = "Log All Animations: OFF"
LogAllButton.Font = Enum.Font.Gotham
LogAllButton.TextSize = 14
local LogAllUICorner = Instance.new("UICorner", LogAllButton)
LogAllUICorner.CornerRadius = UDim.new(0, 8)

----------------------------------------------------------------
-- Functions
----------------------------------------------------------------
local function HideAllPanels()
    PickFrame.Visible = false
    LoopFrame.Visible = false
    SettingsFrame.Visible = false
end

local function detectAnimations()
    local function logFromCharacter(character)
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation then
                    if not animationsLogged[track.Animation.AnimationId] then
                        local AnimButton = Instance.new("TextButton")
                        AnimButton.Parent = ScrollFrame
                        AnimButton.Size = UDim2.new(1, -10, 0, 40)
                        AnimButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                        AnimButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                        AnimButton.Text = "Animation: " .. track.Animation.AnimationId
                        AnimButton.Font = Enum.Font.Gotham
                        AnimButton.TextSize = 14
                        local AnimUICorner = Instance.new("UICorner", AnimButton)
                        AnimUICorner.CornerRadius = UDim.new(0, 8)
                        AnimButton.MouseButton1Click:Connect(function()
                            selectedAnimId = track.Animation.AnimationId
                            HideAllPanels()
                            PickFrame.Visible = true
                        end)
                        animationsLogged[track.Animation.AnimationId] = true
                    end
                end
            end
        end
    end

    for _, child in ipairs(ScrollFrame:GetChildren()) do
        if child:IsA("TextLabel") and child.Text == "No Animations :(" then
            child:Destroy()
        end
    end

    if logAllAnimations then
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr.Character then logFromCharacter(plr.Character) end
        end
        for _, npc in ipairs(Workspace:GetDescendants()) do
            if npc:IsA("Model") and npc:FindFirstChild("Humanoid") then
                logFromCharacter(npc)
            end
        end
    else
        if player.Character then logFromCharacter(player.Character) end
    end

    if #ScrollFrame:GetChildren() == 1 then
        local noAnimLabel = Instance.new("TextLabel")
        noAnimLabel.Parent = ScrollFrame
        noAnimLabel.Size = UDim2.new(1, -10, 0, 40)
        noAnimLabel.BackgroundTransparency = 1
        noAnimLabel.Text = "No Animations :("
        noAnimLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        noAnimLabel.TextSize = 14
        noAnimLabel.Font = Enum.Font.Gotham
    end
end

----------------------------------------------------------------
-- Connections
----------------------------------------------------------------

-- Toggle Button: show/hide entire GUI; when hiding, close all sub-panels (including SettingsFrame)
local guiVisible = false
ToggleButton.MouseButton1Click:Connect(function()
    guiVisible = not guiVisible
    MainFrame.Visible = guiVisible
    if not guiVisible then
        HideAllPanels()
    else
        detectAnimations()
    end
end)

-- PickFrame X Button
PickClose.MouseButton1Click:Connect(function()
    PickFrame.Visible = false
end)

-- LoopFrame X Button
LoopClose.MouseButton1Click:Connect(function()
    LoopFrame.Visible = false
end)

-- SettingsFrame X Button
SettingsClose.MouseButton1Click:Connect(function()
    SettingsFrame.Visible = false
end)

-- Play Animation: In PickFrame, clicking Play shows LoopFrame (for loop choice)
PlayButton.MouseButton1Click:Connect(function()
    if selectedAnimId and player.Character then
        local humanoid = player.Character:FindFirstChild("Humanoid")
        if humanoid then
            -- If a looping animation is already playing, stop it.
            if selectedAnimTrack then
                selectedAnimTrack:Stop()
                selectedAnimTrack = nil
            end
            local anim = Instance.new("Animation")
            anim.AnimationId = selectedAnimId
            selectedAnimTrack = humanoid:LoadAnimation(anim)
            LoopFrame.Visible = true
        end
    else
        PickFrame.Visible = false
    end
end)

-- LoopFrame Options
YesButton.MouseButton1Click:Connect(function()
    if selectedAnimTrack then
        selectedAnimTrack.Looped = true
        selectedAnimTrack:Play()
        -- Show StopLoopButton when looping starts
        StopLoopButton.Visible = true
    end
    LoopFrame.Visible = false
    PickFrame.Visible = false
end)

NoButton.MouseButton1Click:Connect(function()
    if selectedAnimTrack then
        selectedAnimTrack.Looped = false
        selectedAnimTrack:Play()
    end
    LoopFrame.Visible = false
    PickFrame.Visible = false
end)

-- StopLoopButton: stops the looping animation and hides itself
StopLoopButton.MouseButton1Click:Connect(function()
    if selectedAnimTrack then
        selectedAnimTrack:Stop()
        selectedAnimTrack = nil
    end
    StopLoopButton.Visible = false
end)

-- Copy Button (in PickFrame)
CopyButton.MouseButton1Click:Connect(function()
    if selectedAnimId then
        setclipboard(selectedAnimId)
    end
    PickFrame.Visible = false
end)

-- Settings Toggle (a Settings button exists in MainFrame)
local SettingsButton = Instance.new("ImageButton")
SettingsButton.Parent = MainFrame
SettingsButton.Size = UDim2.new(0, 30, 0, 30)
SettingsButton.Position = UDim2.new(0, 10, 0, 5)
SettingsButton.Image = "rbxthumb://type=Asset&id=6720824672&w=420&h=420"
SettingsButton.BackgroundTransparency = 1

SettingsButton.MouseButton1Click:Connect(function()
    SettingsFrame.Visible = not SettingsFrame.Visible
    -- Hide PickFrame and LoopFrame when toggling Settings
    PickFrame.Visible = false
    LoopFrame.Visible = false
end)

-- SettingsFrame Buttons
LogAllButton.MouseButton1Click:Connect(function()
    logAllAnimations = not logAllAnimations
    LogAllButton.Text = "Log All Animations: " .. (logAllAnimations and "ON" or "OFF")
end)

ClearAllButton.MouseButton1Click:Connect(function()
    for _, child in ipairs(ScrollFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    animationsLogged = {}
end)

----------------------------------------------------------------
-- Monitor Animations Periodically
----------------------------------------------------------------
while true do
    if MainFrame.Visible then
        detectAnimations()
    end
    wait(0.5)
end
